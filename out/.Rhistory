y1 = x$mean.subseries, y1.lim = c(0.4,0.6), x.lab = "",
y1.lab = "sub-series mean", y2.lab = "lambda", keylocation = "topright")
yyplot(c(1:1000000),y2 = x$lambda,
y1 = x$mean.subseries, y1.lim = c(0.45,0.55), x.lab = "",
y1.lab = "Sub-series mean", y2.lab = "Lambda", keylocation = "topright")
yyplot(c(1:1000000),y2 = x$lambda,
y1 = x$mean.subseries, y1.lim = c(0.49,0.51), x.lab = "",
y1.lab = "Sub-series mean", y2.lab = "Lambda", keylocation = "topright")
x[1000000,]
?write.table
write.table(x, file = "Libraries\\Documents\\xvalues.csv",sep = ",", row.names = FALSE )
write.table(x, file = "Libraries\Documents\xvalues.csv",sep = ",", row.names = FALSE )
write.table(x, file = "Libraries/Documents/xvalues.csv",sep = ",", row.names = FALSE )
write.table(x, file = "C:\\Users\\A0033620\\Dropbox\\Documents\\Economicsxvalues.csv",sep = ",", row.names = FALSE )
?rbinom
.Machine$integer.max
.Machine$integer.max/1000000
mean.revision <- function(n, seed = NULL){
if (!is.null(seed)) set.seed(seed)
x = rbinom(n,1,0.5)
ave_x = c(1:length(x))
actual_heads = c(1:length(x))
expected_heads = c(1:length(x))/2
for (i in 1:length(x)){
actual_heads[i] = sum(x[1:i])
ave_x[i] = mean(x[1:i])
}
print(ave_x == cumsum(x)/c(1:length(x)))
mean.revision <- data.frame(lambda = (actual_heads - expected_heads), mean.subseries = ave_x,
series = x,running.total = cumsum(x), expected.value = c(1:n)/2)
}
mean.revision(10)
mean.revision(100)
mean.revision <- function(n, seed = NULL){
if (!is.null(seed)) set.seed(seed)
x = rbinom(n,1,0.5)
ave_x = c(1:length(x))
actual_heads = c(1:length(x))
expected_heads = c(1:length(x))/2
for (i in 1:length(x)){
actual_heads[i] = sum(x[1:i])
}
ave_x = cumsum(x)/c(1:length(x))
print(actual_heads == cumsum(x))
mean.revision <- data.frame(lambda = (actual_heads - expected_heads), mean.subseries = ave_x,
series = x,running.total = cumsum(x), expected.value = c(1:n)/2)
}
mean.revision(100)
mean.revision <- function(n, seed = NULL){
if (!is.null(seed)) set.seed(seed)
x = rbinom(n,1,0.5)
expected_heads <- c(1:length(x))/2
ave_x <- cumsum(x)/c(1:length(x))
actual_heads <- cumsum(x)
mean.revision <- data.frame(lambda = (actual_heads - expected_heads), mean.subseries = ave_x,
series = x,running.total = cumsum(x), expected.value = c(1:n)/2)
}
x1 <- mean.revision(100000)
x1 <- mean.revision(1000000)
x1 <- mean.revision(10000000)
x1 <- mean.revision(100000000)
x1 <- mean.revision(50000000)
x1 <- mean.revision(20000000)
x1 <- mean.revision(15000000)
x1 <- mean.revision(10000000)
?abline
plot(x)
plot(actual_heads)
abline(0,0,col="grey")
abline(0,0,col="grey")
abline(0,0,col="dark0-grey")
abline(0,0,col="dark-grey")
abline(0,0,col="darkgrey")
plot(actual_heads)
abline(0,0,col="darkgrey")
for(i in 1:30){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i*100)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
dev.off()
}
proc.time() - pmt
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:30){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i*100)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
dev.off()
}
proc.time() - pmt
# plot multiple runs of the function
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:1){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i*100)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
dev.off()
}
proc.time() - pmt
# plot multiple runs of the function
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:1){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series_", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i*100)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
dev.off()
}
proc.time() - pmt
30-11
19/30
?qbinom
qbinom(19,30,0.5)
pbinom(19,30,0.5)
pbinom(18,30,0.5)
pbinom(30,30,0.5)
pbinom(19,30,0.5)
pnorm(1,0,1)
pnorm(1,0,1)
1-2*pnorm(1,0,1)
2*pnorm(1,0,1)-1
pbinom(19,30,2*pnorm(1,0,1)-1)
pbinom(19,30,2*pnorm(1,0,1)-1)
pbinom(20,30,2*pnorm(1,0,1)-1)
pbinom(21,30,2*pnorm(1,0,1)-1)
1-2*pnorm(1,0,1)
2*pnorm(1,0,1)-1
30*(2*pnorm(1,0,1)-1)
plot(ave_x)
text("hello")
text("bottomright","test")
text(0,10,"test")
text(10,10,"test")
text(20,20,"test")
?text
text(pos = 1,"test")
text(20,20,"test", pos = 2)
text(20,20,"test", pos = 2)
text(20,20,"test", pos = 3)
text(20,20,labels = c("test"), pos = 3)
text(20,20,labels = c("test"))
text(200,200,labels = c("test"))
text(5.0, 150, paste("Mean = ", "\nMedian = ", "\nStd.Dev = ", sep = ''), pos = 2)
legend("bottomright","test"
)
legend("bottomright","test",byt="n")
legend("bottomright","test",bty="n")
plot(ave_x)
legend("bottomright","test",bty="n")
plot(ave_x)
legend("bottomright","test",bty="n",cex = 0.8)
# plot multiple runs of the function
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:1){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i*100)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
legend("bottomright",paste("seed =", i, sep=""),bty="n",cex = 0.8, col = "grey")
dev.off()
}
proc.time() - pmt
# plot multiple runs of the function
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:30){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series - ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
legend("bottomright",paste("seed =", i, sep=""),bty="n",cex = 0.8, col = "grey")
dev.off()
}
proc.time() - pmt
?par
# plot multiple runs of the function
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:1){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series - ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
legend("bottomright",paste("seed =", i, sep=""),bty="n",cex = 0.8, col.lab = "grey")
dev.off()
}
proc.time() - pmt
# plot multiple runs of the function
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:1){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series - ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
legend("bottomright",paste("seed = ", i, sep=""),bty="n",cex = 0.8, col.sub = "grey")
dev.off()
}
proc.time() - pmt
# plot multiple runs of the function
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:1){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series - ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
legend("bottomright",paste("seed = ", i, sep=""),bty="n",cex = 0.8, col = "grey")
dev.off()
}
proc.time() - pmt
# plot multiple runs of the function
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:1){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series - ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
legend("bottomright",paste("seed = ", i, sep=""),bty="n",cex = 0.8, col = "grey")
dev.off()
}
proc.time() - pmt
# plot multiple runs of the function
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:1){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series - ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i*100)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
par(col = "grey")
legend("bottomright",paste("random seed = ", i*100, sep=""),bty="n",cex = 0.8, col = "grey")
dev.off()
par(col = "black")
}
proc.time() - pmt
# plot multiple runs of the function
pmt <- proc.time()
n = 1000000
confidence = sqrt(0.25*c(1:n))
for(i in 1:30){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\",
"Series - ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i*100)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
par(col = "darkgrey")
legend("bottomright",paste("random seed = ", i*100, sep=""),bty="n",cex = 0.8, col = "grey")
dev.off()
par(col = "black")
}
proc.time() - pmt
# plot multiple runs of the function
pmt <- proc.time()
n = 250
confidence = sqrt(0.25*c(1:n))
for(i in 1:30){
par(mfrow=c(1,1))
png(paste("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\Research\\Vivian-Auret-plots\\short\\",
"Series - ", i,".png", sep = ""),
width = 800, height = 800)
x <- mean.revision(n,seed = i*100)
plot(x$lambda~c(1:n), type="l",ylab = "lambda", xlab = "index",main = paste("Series", i, sep = " "),
ylim = c(floor(-2*sqrt(0.25*n)),floor(2*sqrt(0.25*n))))
lines(confidence~c(1:n), type = "l", col = "grey")
lines(-confidence~c(1:n), type = "l",col = "grey")
abline(0,0,col = "darkgrey")
par(col = "darkgrey")
legend("bottomright",paste("random seed = ", i*100, sep=""),bty="n",cex = 0.8, col = "grey")
dev.off()
par(col = "black")
}
proc.time() - pmt
0.5*sqrt(250)
0.5*sqrt(250)/250
0.5*sqrt(1000000)/1000000
sqrt(50)
sqrt(250)
15^2
16^2
256*0.5
128+16*5
128+16
(128+16)/256
x <- c(1:100)
lnx <- log(x)
plot(lnx~x)
plot(lnx~x, type = "l")
lines(lnx/x)
max(lnx/x)
x <- c(1:10)
x <- c(1:20)
lnx <- log(x)
plot(lnx~x, type = "l")
lines(lnx/x)
x <- c(1:10)
lnx <- log(x)
plot(lnx~x, type = "l")
lines(lnx/x)
lnx/x
stringToAnswers <- function(string,value.code = c(a="X....",b=".X...",c="..X..",d="...X.",e="....X",z=".....")){
s.length <- nchar(as.character(string))
names(value.code)[match(substring(string,seq(1,875,5),seq(5,875,5)),value.code)]
}
econ1000.2010 <- read.csv("econ1000-20100311-1.csv",sep=",",head=FALSE)
dat<- data.frame(t(sapply(econ1000.2010$V6,stringToAnswers)))
names(dat)<-paste("q",1:175)
econ1000.2010 <- data.frame(econ1000.2010,dat)
econ1000.2010$V6 <- NULL
setwd("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\econ 1 data")
econ1000.2010 <- read.table("econ1000-20100311-1.csv",sep="  ",head=FALSE)
econ1000.2010 <- read.table("econ1000-20100311.dat",sep="  ",head=FALSE)
econ1000.2010 <- read.table("econ1000-20100311.dat",sep="\t",head=FALSE)
View(econ1000.2010)
econ1000.2010 <- read.table("econ1000-20100311.dat",sep=" ",head=FALSE)
View(econ1000.2010)
?read.table
setwd("C:\\Users\\A0033620\\Dropbox\\Documents\\Economics\\econ 1 data\\out")
list.files()
for file in list.files(){
print(file)
}
print(file)
for (file in list.files()){
print(1)
}
for (file in list.files()){
print(file)
}
stringToAnswers <- function(string,value.code = c(a="X....",b=".X...",c="..X..",d="...X.",e="....X",z=".....")){
s.length <- nchar(as.character(string))
names(value.code)[match(substring(string,seq(1,875,5),seq(5,875,5)),value.code)]
}
?write.table
paster("a","b")
paste("a","b")
for (f in list.files()){
data <- read.csv(f,sep=",",head=FALSE)
dat<- data.frame(t(sapply(data$V6,stringToAnswers)))
names(dat)<-paste("q",1:175)
data <- data.frame(data,dat)
data$V6 <- NULL
write.table(data,file=paste("edit\\",f,".csv",sep=""))
}
?write.table
for (f in list.files()){
data <- read.csv(f,sep=",",head=FALSE)
dat<- data.frame(t(sapply(data$V6,stringToAnswers)))
names(dat)<-paste("q",1:175)
data <- data.frame(data,dat)
data$V6 <- NULL
write.table(data,file=paste("edit\\",f,".csv",sep=""),sep=",",quote=FALSE)
}
for (f in list.files()){
data <- read.csv(f,sep=",",head=FALSE)
dat<- data.frame(t(sapply(data$V6,stringToAnswers)))
names(dat)<-paste("q",1:175)
data <- data.frame(data,dat)
data$V6 <- NULL
write.table(data,file=paste("edit\\",f,sep=""),sep=",",quote=FALSE)
}
econ1000.2010 <- read.csv("econ1000-20100311.csv",sep=" ",head=FALSE)
processFrame <- function(df){
dat<- data.frame(t(sapply(df$V6,stringToAnswers)))
names(dat)<-paste("q",1:175)
df <- data.frame(df,dat)
df$V6 <- NULL
return df
}
processFrame <- function(df){
dat<- data.frame(t(sapply(df$V6,stringToAnswers)))
names(dat)<-paste("q",1:175)
df <- data.frame(df,dat)
df$V6 <- NULL
return (df)
}
dat = processFrame(econ1000.2010)
View(econ1000.2010)
econ1000.2010 <- read.csv("econ1000-20100311.csv",sep=",",head=FALSE)
dat = processFrame(econ1000.2010)
View(dat)
data[36,]
data[35,]
data[36,]
data[36,5]
data[,5]
data[36,"q5"]
data[36,c("q5")]
data[36,c("q.5")]
data[35,c("q.5")]
data[37,c("q.5")]
data[,is.na("q.5")]
data[,data[is.na("q.5")]
]
data[data[is.na("q.5")],]
stringToAnswers(econ1000.2010[1])
stringToAnswers(econ1000.2010$V6[1])
stringToAnswers(econ1000.2010$V6[2])
stringToAnswers(econ1000.2010$V6[367])
stringToAnswers(econ1000.2010$V6[36])
stringToAnswers <- function(string,value.code = c(a="X....",b=".X...",c="..X..",d="...X.",e="....X",z="....."),debug=FALSE){
s.length <- nchar(as.character(string))
if (debug) print(substring(string,seq(1,875,5),seq(5,875,5)))
names(value.code)[match(substring(string,seq(1,875,5),seq(5,875,5)),value.code)]
}
stringToAnswers(econ1000.2010$V6[36],debug=TRUE)
for (f in list.files()){
data <- read.csv(f,sep=",",head=FALSE)
dat<- data.frame(t(sapply(data$V6,stringToAnswers)))
names(dat)<-paste("q",1:175)
data <- data.frame(data,dat)
data$V6 <- NULL
write.table(data,file=paste("edit\\",f,sep=""),sep=",",quote=FALSE)
}
for (f in list.files()){
print(f)
data <- read.csv(f,sep=",",head=FALSE)
dat<- data.frame(t(sapply(data$V6,stringToAnswers)))
names(dat)<-paste("q",1:175)
data <- data.frame(data,dat)
data$V6 <- NULL
write.table(data,file=paste("edit\\",f,sep=""),sep=",",quote=FALSE)
}
