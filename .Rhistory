#  print(answers=="z")
}
t1 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
temp <- as.data.frame(temp)
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
markScript <- as.data.frame(lapply(temp,function(x,blank) if(blank,"blank",ifelse(x,"correct","incorrect")),blanks))
#  print(answers=="z")
}
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
temp <- as.data.frame(temp)
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t1 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
size(june2012)
length(june2012)
ncols(june2012)
numcols(june2012)
ncol(june2012)
ncrow(june2012)
nrow(june2012)
memo2012[1]
memo2012[2]
memo2012$$Micro.exam.sem1.2012
memo2012$Micro.exam.sem1.2012
rep("incorrect",5,6)
?rep
data.framw
?data.frame
matrix
?matrix
matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers))
t2<-matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers))
t2<-as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
View(`t2`)
t2[,1]
t2[1,]
t2[answers[,1]=="z",1]
answers[,1]=="z"
View(answers)
answers[answers[,1]=="z"]
answers[answers[,1]=="z",1]
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[answers[,i]=="z",i]<-"blank"
temp[answers[,i]==memo,i]<-"correct"
temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t1 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
?which
1:10 == 5
which(NA,1:10 == 5)
which(c(NA,1:10 == 5))
which(c(NA,1:10 == 6))
which(c(NA,1:10 == 9))
which(c(NA,1:10 == 10))
which(c(NA,1:10 == 1))
c(NA,1:10 == 1)
c(NA,1:10 == 1,NA,NA)
c(NA,1:10 == 1,NA,NA,TRUE)
c(NA,1:10 == 1,NA,NA,TRUE,FALSE)
which(c(NA,1:10 == 1,NA,NA,TRUE,FALSE))
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(answers[,i]=="z"),i]<-"blank"
temp[which(answers[,i]==memo),i]<-"correct"
temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t1 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(answers[,i]=="z"),i]<-"blank"
temp[which(answers[,i]==memo),i]<-"correct"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t1 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(answers[,i]=="z"),i]<-"blank"
temp[which(answers[,i]==memo),i]<-"correct"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t1 = markScript(memo2012$Micro.exam.sem1 .2012,june2012)
t1 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
View(`t2`)
View(`t1`)
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(answers[,i]=="z"),i]<-"hi"
temp[which(answers[,i]==memo),i]<-"correct"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t1 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
View(`t1`)
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(answers[,i]=="z"),i]<-"blank"
temp[which(answers[,i]==memo),i]<-"hi"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t1 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
View(`t1`)
t3 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(answers[,i]=="z"),i]<-"blank"
#  temp[which(answers[,i]==memo),i]<-"correct"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t3 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
View(`t3`)
june2012[,6]
june2012[,7]
View(june2012)
june2012[1,]
june2012[6:50,]
answers[1,]
answers[1,]==memo2012$Micro.T1.sem1.2012
memo2012$Micro.T1.sem1.2012
answers[1,]==memo2012$Micro.exam.sem2.2012
memo2012$Micro.exam.sem2.2012
answers[1,]
as.matrix(answers[1,])==memo2012$Micro.exam.sem2.2012
as.matrix(toupper(answers[1,]))==memo2012$Micro.exam.sem2.2012
toupper(as.matrix(answers[1,]))==memo2012$Micro.exam.sem2.2012
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(answers[,i]=="z"),i]<-"blank"
temp[which(toupper(as.matrix(answers[i,]))==memo),i]<-"correct"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t3 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
View(`t3`)
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(answers[,i]=="z"),i]<-"blank"
#   temp[which(toupper(as.matrix(answers[i,]))==memo),i]<-"correct"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t3 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
View(`t3`)
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(toupper(as.matrix(answers[i,]))==memo),i]<-"correct"
temp[which(answers[,i]=="z"),i]<-"blank"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t3 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
View(`t3`)
View(answers)
View(memo2012)
View(`t3`)
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
print(memo)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(toupper(as.matrix(answers[i,]))==memo),i]<-"correct"
temp[which(answers[,i]=="z"),i]<-"blank"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t3 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(toupper(as.matrix(answers[i,]))==memo),i]<-"correct"
temp[which(answers[,i]=="z"),i]<-"blank"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-memo
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t3 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
mem = t3
mem
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(toupper(as.matrix(answers[i,]))==memo),i]<-"correct"
temp[which(answers[,i]=="z"),i]<-"blank"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t3 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
answers[,i]
answers[,1]
markScript <- function(memo,data){
n <- length(memo[memo!=""])+5
answers <- data[,6:n]
blanks <- answers=="z"
temp <- as.data.frame(matrix(data=NA,nrow = nrow(answers),ncol = ncol(answers)))
#temp <- toupper(as.matrix(answers)) == toupper(tempMemo)
#temp <- as.data.frame(temp)
for (i in 1:length(memo[memo!=""])){
temp[,i] <- "incorrect"
temp[which(answers[,i]==tolower(memo[i])),i]<-"correct"
temp[which(answers[,i]=="z"),i]<-"blank"
#  temp[is.na(answers[,i]),i]<-NA
}
markScript<-temp
#  markScript <- as.data.frame(lapply(temp,function(x,blanks) {ifelse(x,"correct","incorrect")},blanks))
#  markScript <- as.data.frame(lapply(temp,function(x,blank) ifelse(x,"correct","incorrect"),blanks))
#  print(answers=="z")
}
t3 = markScript(memo2012$Micro.exam.sem1.2012,june2012)
View(`t3`)
?reshape
install.packages("xlsx")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("ggplot2")
install.packages("reshape")
install.packages("plyr")
install.packages("stats")
install.packages("MASS")
install.packages("lattice")
install.packages("scatterplot3d")
install.packages("foreach")
install.packages("gWidgets")
install.packages("cluster")
install.packages("survival")
install.packages("nlme")
install.packages("Matrix")
install.packages("mvtnorm")
install.packages("tcltk")
install.packages("coda")
install.packages("igraph")
install.packages("rgl")
install.packages("stats")
install.packages("methods")
install.packages("graphics")
install.packages("MASS")
install.packages("grDevices")
install.packages("utils")
install.packages("lattice")
install.packages("grid")
install.packages("Matrix")
install.packages("mvtnorm")
install.packages("sp")
install.packages("tcltk")
install.packages("splines")
install.packages("nlme")
install.packages("survival")
install.packages("cluster")
install.packages("R.methodsS3")
install.packages("coda")
install.packages("igraph")
install.packages("akima")
install.packages("rgl")
install.packages("rJava")
install.packages("RColorBrewer")
install.packages("ape")
install.packages("gtools")
install.packages("nnet")
install.packages("quadprog")
install.packages("boot")
install.packages("Hmisc")
install.packages("car")
install.packages("lme4")
install.packages("foreign")
install.packages("Rcpp")
install.packages("robustbase")
install.packages("zoo")
install.packages("ggplot2")
install.packages("iterators")
install.packages("XML")
install.packages("plyr")
install.packages("statmod")
install.packages("tkrplot")
install.packages("timeDate")
install.packages("fields")
install.packages("R.oo")
install.packages("futile.paradigm")
install.packages("abind")
install.packages("rscproxy")
install.packages("scatterplot3d")
install.packages("distr")
install.packages("codetools")
install.packages("corpcor")
install.packages("numDeriv")
install.packages("gdata")
install.packages("emulator")
install.packages("KernSmooth")
install.packages("mgcv")
install.packages("ade4")
install.packages("foreach")
install.packages("e1071")
install.packages("splus2R")
install.packages("plotrix")
install.packages("RGtk2")
install.packages("mclust")
install.packages("colorspace")
install.packages("rgdal")
install.packages("gWidgets")
install.packages("tools")
install.packages("DBI")
install.packages("class")
install.packages("snow")
install.packages("tframe")
install.packages("pcaPP")
install.packages("stats4")
install.packages("vegan")
install.packages("timeSeries")
install.packages("rgenoud")
install.packages("reshape")
install.packages("RCurl")
install.packages("rpart")
install.packages("Rcmdr")
install.packages("locfit")
install.packages("RJSONIO")
install.packages("maxLik")
install.packages("startupmsg")
install.packages("deSolve")
install.packages("tseries")
install.packages("gamlss")
install.packages("lars")
install.packages("caTools")
install.packages("R.utils")
install.packages("genetics")
install.packages("proto")
install.packages("np")
install.packages("spatstat")
install.packages("MCMCpack")
install.packages("maptools")
install.packages("rrcov")
install.packages("lpSolve")
install.packages("RcppArmadillo")
install.packages("copula")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("methods")
install.packages("graphics")
install.packages("grDevices")
install.packages("utils")
install.packages("tools")
install.packages("stats")
install.packages("stats")
install.packages("methods")
install.packages("graphics")
install.packages("grDevices")
install.packages("utils")
install.packages("tools")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
update.packages()
install.packages("stargazer")
